name: Test reskit 1.3.0 for python Versions
on: 
  workflow_dispatch:
    inputs:
      tags:
        description: 'Manual run' 
  push:
    branches: 
      - "version/0.3.0"

  # Allows to trigger the workflow manually
    
jobs:
    TestGeokitForGdalVersions:
        name: python_version=${{ matrix.python_version }},${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                # https://docs.github.com/en/actions/how-tos/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow
                # Min
                os: ["ubuntu-24.04"]
                # Proper
                # os: ["ubuntu-22.04", "macos-13","windows-2025","windows-2022","macos-14"]
                # os: ["ubuntu-24.04","ubuntu-22.04", "macos-13","windows-2025","windows-2022"]                
                # os: ["macos-15"]
                # Proper Gdal Versions
                python_version: ["3.3","3.4","3.5","3.6","3.7","3.8","3.9","3.10"]
                # Failing Versions 
                # python_version: ["2.4.3","2.4.4","3.3.2","3.3.3",]
        steps:
            - name: Setup Conda
              uses: conda-incubator/setup-miniconda@v3
              with:
                miniforge-version: latest
                channels: conda-forge,nodefaults
                activate-environment: test_env
                conda-remove-defaults: "true"  
            - name: Checkout geokit
              uses: actions/checkout@v4        
            - name: Update values.yaml
              uses: fjogeleit/yaml-update-action@main
              with:
                valueFile: 'requirements-dev.yml'
                commitChange: false
                method: CreateOrUpdate
                changes: |
                  {
                  "dependencies[0]": "python =${{ matrix.python_version }}"
                  }
            - name: Install libraries
              shell: pwsh
              id: install-step
              run: |
                    ls
                    echo "LS Done"
                    mamba env create --file=requirements-dev.yml -c conda-forge -c nodefaults -n test_env 
                    mamba run -n test_env python pip install -e . --no-deps
                    echo "Installation done"
                    mamba list -n test_env
                    echo "libraries printed" 
            - name: Run pytest for geokit
              shell: pwsh
              run: |
                    echo "Start ls"
                    ls
                    echo "ls terminated"
                    echo "start pytest"
                    mamba run -n test_env python -m pytest -vv
                    echo "Pytest done"